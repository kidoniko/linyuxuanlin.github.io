{"meta":{"title":"辐射工作站","subtitle":"一面科技，一面生活","description":"一面科技，一面生活","author":"Lin","url":"https://linyuxuanlin.github.io"},"pages":[{"title":"about","date":"2016-09-11T04:51:17.000Z","updated":"2017-06-30T14:58:44.000Z","comments":true,"path":"about/index.html","permalink":"https://linyuxuanlin.github.io/about/index.html","excerpt":"","text":"GitHub Pages和Hexo都是好东西。 在这纷纷扰扰的世界里，与其临渊羡鱼，不如退而结网。每个人都有一张属于自己的网，织好这一张就够了。 这个页面下可随意留言（抱歉评论模块还没配置好。。。） WeChat: linyuxuanlinQQ: 824676271mail: linyuxuanlin52@gmail.com"},{"title":"categories","date":"2016-09-11T04:36:47.000Z","updated":"2016-09-11T04:38:30.000Z","comments":false,"path":"categories/index.html","permalink":"https://linyuxuanlin.github.io/categories/index.html","excerpt":"","text":""},{"title":"categories","date":"2016-09-11T04:36:47.000Z","updated":"2016-09-11T04:38:30.000Z","comments":false,"path":"life/index.html","permalink":"https://linyuxuanlin.github.io/life/index.html","excerpt":"","text":""},{"title":"搜索结果","date":"2015-11-17T07:58:22.000Z","updated":"2016-10-03T04:12:10.000Z","comments":false,"path":"search/index.html","permalink":"https://linyuxuanlin.github.io/search/index.html","excerpt":"","text":".hl { color: red; } 12345678910111213141516171819202122232425$data = simplexml_load_file(&apos;search.xml&apos;);define(LEN, 1000);echo &apos;&lt;div class=&quot;article-inner article-entry&quot;&gt;&lt;h2&gt;Search Results for: &apos; . $_GET[&quot;s&quot;] . &apos;&lt;/h2&gt;&lt;/div&gt;&apos;;foreach($data-&gt;entry as $a) &#123; // echo $a-&gt;title;// echo preg_replace(&quot;/http:\\/\\/(.*)\\//&quot;,&quot;&lt;a href=\\&quot;\\$&#123;0&#125;\\&quot;&gt;\\$&#123;0&#125;&lt;/a&gt;&quot;,&quot;$a&quot;); $pattern = &quot;/&quot; . $_GET[&quot;s&quot;] . &quot;/i&quot;; $replace = &apos;&lt;span class=hl&gt;&apos; . $_GET[&quot;s&quot;] . &apos;&lt;/span&gt;&apos;; // echo $pattern . &quot;&lt;BR&gt;&quot;; // echo $replace . &quot;&lt;BR&gt;&quot;; if(preg_match($pattern, $a-&gt;title) or preg_match($pattern, $a-&gt;content)) &#123; echo &apos;&lt;div class=&quot;article-inner article-entry&quot; itemprop=&quot;articleBody&quot;&gt;&lt;a href=&apos; . $a-&gt;url . &apos;&gt;&lt;h3&gt;&apos; . preg_replace($pattern, $replace, $a-&gt;title) . &apos;&lt;/h3&gt;&lt;/a&gt;&apos;; $hl_keys = preg_replace($pattern, $replace, $a-&gt;content); $strpos = stripos($a-&gt;content, $_GET[&apos;s&apos;]); $len = min(LEN, strlen($a-&gt;content) - $strpos - 1); echo &apos;&lt;p&gt;&apos; . mb_strcut($hl_keys, $strpos, $len, &quot;utf-8&quot;) . &apos; &lt;span class=article-more-link&gt;&lt;a href=&apos;. $a-&gt;url .&apos;&gt; Detial&gt;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&apos;; &#125;&#125;"},{"title":"tags","date":"2016-09-11T04:29:04.000Z","updated":"2016-09-11T04:29:32.000Z","comments":false,"path":"tags/index.html","permalink":"https://linyuxuanlin.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"班服的设计","slug":"班服的设计","date":"2017-06-30T14:18:32.000Z","updated":"2017-06-30T14:29:46.000Z","comments":true,"path":"2017/06/30/班服的设计/","link":"","permalink":"https://linyuxuanlin.github.io/2017/06/30/班服的设计/","excerpt":"","text":"test挖坑","categories":[{"name":"设计","slug":"设计","permalink":"https://linyuxuanlin.github.io/categories/设计/"}],"tags":[{"name":"作品","slug":"作品","permalink":"https://linyuxuanlin.github.io/tags/作品/"},{"name":"设计","slug":"设计","permalink":"https://linyuxuanlin.github.io/tags/设计/"},{"name":"Illustrator","slug":"Illustrator","permalink":"https://linyuxuanlin.github.io/tags/Illustrator/"}]},{"title":"配置hexo一键更新流程","slug":"配置hexo一键更新流程","date":"2017-06-30T12:59:04.000Z","updated":"2017-06-30T14:31:18.000Z","comments":true,"path":"2017/06/30/配置hexo一键更新流程/","link":"","permalink":"https://linyuxuanlin.github.io/2017/06/30/配置hexo一键更新流程/","excerpt":"","text":"挖坑","categories":[{"name":"技巧","slug":"技巧","permalink":"https://linyuxuanlin.github.io/categories/技巧/"}],"tags":[{"name":"技巧","slug":"技巧","permalink":"https://linyuxuanlin.github.io/tags/技巧/"},{"name":"MacOS","slug":"MacOS","permalink":"https://linyuxuanlin.github.io/tags/MacOS/"}]},{"title":"T-Clock","slug":"T-Clock","date":"2017-06-25T01:47:42.000Z","updated":"2017-06-30T14:26:13.000Z","comments":true,"path":"2017/06/25/T-Clock/","link":"","permalink":"https://linyuxuanlin.github.io/2017/06/25/T-Clock/","excerpt":"简介一直想给自己来一个桌上的小时钟，今天就来做一个吧~","text":"简介一直想给自己来一个桌上的小时钟，今天就来做一个吧~ 硬件 Arduino pro mini（主要是因为体积小，其他的型号也兼容） OLED屏（内部驱动芯片：SSD1306） SPI接口（如果是IIC或者是其他屏幕的也可以，修改程序第12行） RTC时钟模块（ds1307）（可加DS18B20测温） 锂电池 锂电池充电模块 开关 接线见代码，RTC模块按IIC协议接 代码name:T-ClockDescription: a tiny clock IDE version: 1.8.2Author: Lin &lt;linyuxuanlin.github.io&gt;Date: 2016-10-3*/#include &lt;U8glib.h&gt;#include &lt;SPI.h&gt;#include &lt;Wire.h&gt;#include &lt;RTClib.h&gt;U8GLIB_SSD1306_128X64 u8g(10, 9, 12, 11, 13);//这里适用的OLED屏的引脚是：D0,D1,RST,DC/*接线： OLED-Arduino D0-D10 D1-D9 RST-D13 DC-D11*/RTC_DS1307 RTC;//RTC按照IIC接线char monthString[37] =&#123; \"JanFebMarAprMayJunJulAugSepOctNovDec\"&#125;;int monthIndex[122] =&#123; 0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33&#125;;String thisMonth = \"\";String thisTime = \"\";String thisDay = \"\";//用于定义表盘的中心int clockCentreX = 64;int clockCentreY = 32;void draw(void)&#123; u8g.setFont(u8g_font_profont15); DateTime now = RTC.now(); //在底部显示日期 thisDay = String(now.day(), DEC) + \"/\"; thisMonth = \"\"; for (int i = 0; i &lt;= 2; i++) &#123; thisMonth += monthString[monthIndex[now.month() - 1] + i]; &#125; thisDay = thisDay + thisMonth + \"/\"; thisDay = thisDay + String(now.year() , DEC); const char* newDay = (const char*) thisDay.c_str(); u8g.drawStr(32, 63, newDay); thisTime = \"\"; thisTime = String(now.hour()) + \":\"; if (now.minute() &lt; 10) &#123; thisTime = thisTime + \"0\"; // 在单数数字前头加个0 &#125; //数字时间 thisTime = thisTime + String(now.minute()) ; const char* newTime = (const char*) thisTime.c_str(); u8g.drawStr(10, 10, newTime); //画时钟盘面 u8g.drawCircle(clockCentreX, clockCentreY, 20); // 外面的大圆 u8g.drawCircle(clockCentreX, clockCentreY, 2); // 里面的小圆 //跳动显示 for ( int z = 0; z &lt; 360; z = z + 30 ) &#123; //始于0°,止于360° float angle = z ; angle = (angle / 57.29577951) ; //化度数为弧度 int x2 = (clockCentreX + (sin(angle) * 20)); int y2 = (clockCentreY - (cos(angle) * 20)); int x3 = (clockCentreX + (sin(angle) * (20 - 5))); int y3 = (clockCentreY - (cos(angle) * (20 - 5))); u8g.drawLine(x2, y2, x3, y3); &#125; // 秒针 float angle = now.second() * 6 ; angle = (angle / 57.29577951) ; //化度数为弧度 int x3 = (clockCentreX + (sin(angle) * (20))); int y3 = (clockCentreY - (cos(angle) * (20))); u8g.drawLine(clockCentreX, clockCentreY, x3, y3); // 分针 angle = now.minute() * 6 ; angle = (angle / 57.29577951) ; //化度数为弧度 x3 = (clockCentreX + (sin(angle) * (20 - 3))); y3 = (clockCentreY - (cos(angle) * (20 - 3))); u8g.drawLine(clockCentreX, clockCentreY, x3, y3); // 时针 angle = now.hour() * 30 + int((now.minute() / 12) * 6 ) ; angle = (angle / 57.29577951) ; //化度数为弧度 x3 = (clockCentreX + (sin(angle) * (20 - 11))); y3 = (clockCentreY - (cos(angle) * (20 - 11))); u8g.drawLine(clockCentreX, clockCentreY, x3, y3); //显示自己的定制字符 u8g.setPrintPos(100, 10); u8g.print(\"Lin\");&#125;void setup(void)&#123; Serial.begin(9600); analogReference(EXTERNAL); Wire.begin(); RTC.begin(); if (! RTC.isrunning()) &#123; Serial.println(\"RTC is NOT running!\"); RTC.adjust(DateTime(__DATE__, __TIME__)); &#125;&#125;void loop(void)&#123; u8g.firstPage(); do &#123; draw(); &#125; while ( u8g.nextPage() ); delay(10);&#125; 外壳本来是想3D打印一个的，无奈焊接后时间不准，没法调了：) 资料下载所有文件：https://github.com/linyuxuanlin/My-Arduino-projects/tree/master/T-Clock注：我提供的文件里已经包括下列库，这些仅供参考 RTClib库GitHub ：https://github.com/adafruit/RTClibU8glib库GitHub ： https://github.com/olikraus/u8glib备用：https://bintray.com/olikraus/u8glib 参考屏幕显示不了？先来测试一下~OLED-SPI试验用Arudino Uno给pro mini烧程序：http://blog.sina.com.cn/s/blog_53f8d23d0102wv3m.htmlU8glib用法：https://github.com/olikraus/u8glib/wiki/device#ssd1306-128x64GitHub源，英文http://www.geek-workshop.com/thread-10634-1-1.html极客工坊，中文，比较推荐OLED屏参考：引脚信息：D0：CLK时钟D1：MOSI数据RST：复位DC：数据/命令兼容3.3V和5V 写在最后这个项目花了一天的时间，我尽量让这这篇文章看起来详细和容易理解。 （不介意给这个项目一个star？）","categories":[{"name":"科技","slug":"科技","permalink":"https://linyuxuanlin.github.io/categories/科技/"}],"tags":[{"name":"Arduino","slug":"Arduino","permalink":"https://linyuxuanlin.github.io/tags/Arduino/"},{"name":"C++","slug":"C","permalink":"https://linyuxuanlin.github.io/tags/C/"},{"name":"教程","slug":"教程","permalink":"https://linyuxuanlin.github.io/tags/教程/"},{"name":"3D打印","slug":"3D打印","permalink":"https://linyuxuanlin.github.io/tags/3D打印/"},{"name":"作品","slug":"作品","permalink":"https://linyuxuanlin.github.io/tags/作品/"}]},{"title":"一场以创新为主题的演讲","slug":"一场以创新为主题的演讲","date":"2017-03-18T03:08:41.000Z","updated":"2017-06-30T14:10:03.000Z","comments":true,"path":"2017/03/18/一场以创新为主题的演讲/","link":"","permalink":"https://linyuxuanlin.github.io/2017/03/18/一场以创新为主题的演讲/","excerpt":"来广州参加科创的省赛，有幸听中科院刘焕彬院士的精彩演讲，分享一下记录和自己的一些想法。","text":"来广州参加科创的省赛，有幸听中科院刘焕彬院士的精彩演讲，分享一下记录和自己的一些想法。 如何把知识转化为智慧？ 把公有知识转化为自有知识 把自有知识转化为智慧 知识的转化过程 公有知识 学习分析总结 自有知识 思考综合集成 智慧 创新发明 博览群书，分析总结 思考综合，交叉集成 思考模式注意三维思考：5W+H+QWho When Where What Why &amp; How``Quality 注意： 过程 方法 效果 培养创新思维的五要素 兴趣-质疑-思考-集成-实践 创新的基础 厚基础 强能力 宽适应 重人品 语录&amp;想法 许多创意其实都是已经使用过的变形，不是所谓的新创意都是崭新的。 把逆境当做机遇，在逆境中磨炼才华 头脑是需要被点燃的火把，要不断思考 掌握自己的学习和思考的方式-知识可学，智慧需悟 保持自己的立场，不迷信权威，不做权威 用两倍于自己说话的时间倾听对方讲话 比起知识，更注重智慧；更注重时间和知识，比起学习 从不需要本钱的事情开始做 笑","categories":[{"name":"观点","slug":"观点","permalink":"https://linyuxuanlin.github.io/categories/观点/"}],"tags":[{"name":"观点","slug":"观点","permalink":"https://linyuxuanlin.github.io/tags/观点/"}]},{"title":"做科研的正确方法","slug":"做科研的正确方法","date":"2016-12-31T14:18:32.000Z","updated":"2017-06-30T14:16:21.000Z","comments":true,"path":"2016/12/31/做科研的正确方法/","link":"","permalink":"https://linyuxuanlin.github.io/2016/12/31/做科研的正确方法/","excerpt":"","text":"当我看到这张图时，我沉默了。没有人教过这个方法，但它揭示的道理却显而易见，一眼就懂。大部分时间，我们需要一个好的创意和想法，这个步骤一般人都知道，否则就无从下手。之后的第二个步骤，我们大多数人便开始动手从事实验工作，此处省略一万字。最后的第三个步骤，便是整理结果，挖出有价值的东西，写作发表出来。否则，就是没有结果，也没有人知道。这当然也算一个方法，它也不是没有用——毕竟许多人就是如此操作。但它的缺点是花费的力气太大，有很多功夫也许就浪费掉了。这就是此图中所谓不好的计划。相反，只需要把第二个步骤和第三个调换一下。效率就会大不相同，大不相同。所有的动手实验工作都是为了第二步的结果写作而服务，事半功倍，这才是好计划。动手做事情需要的时间和精力其实相当大。好的方法很重要。谨以此图与各位从事研究工作的人共勉。当然，即使你不从事科学研究工作，这个方法对于你做其它事情也一样有指导意义。","categories":[{"name":"观点","slug":"观点","permalink":"https://linyuxuanlin.github.io/categories/观点/"}],"tags":[{"name":"观点","slug":"观点","permalink":"https://linyuxuanlin.github.io/tags/观点/"}]},{"title":"怎样优雅地复制百度文库","slug":"怎样优雅地复制百度文库","date":"2016-12-11T14:48:49.000Z","updated":"2017-06-30T14:10:02.000Z","comments":true,"path":"2016/12/11/怎样优雅地复制百度文库/","link":"","permalink":"https://linyuxuanlin.github.io/2016/12/11/怎样优雅地复制百度文库/","excerpt":"怎样做到不用下载券也可复制百度文库的内容？","text":"怎样做到不用下载券也可复制百度文库的内容？ 例如，这篇文章： 想摘抄下来，但是又没法复制全篇，直接下载又需要下载券 方法一：在某篇文章的地址前加上wap，进入了wap版的文库，就可以随心所欲地复制了 效果图： 方法二：记住文章的名字，在度娘直接搜索： 点击百度快照 完成！","categories":[{"name":"技巧","slug":"技巧","permalink":"https://linyuxuanlin.github.io/categories/技巧/"}],"tags":[{"name":"技巧","slug":"技巧","permalink":"https://linyuxuanlin.github.io/tags/技巧/"}]},{"title":"写个小游戏","slug":"写个小游戏","date":"2016-11-06T14:48:49.000Z","updated":"2017-06-30T14:26:13.000Z","comments":true,"path":"2016/11/06/写个小游戏/","link":"","permalink":"https://linyuxuanlin.github.io/2016/11/06/写个小游戏/","excerpt":"前几天在一外网上看到这个项目，用LCD1602液晶屏造个游戏机。","text":"前几天在一外网上看到这个项目，用LCD1602液晶屏造个游戏机。 功能：按钮控制小人跳跃，避开方块准备： LCD1602液晶屏 按钮 Arduino 程序：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308#include &lt;LiquidCrystal.h&gt;#define PIN_BUTTON 2#define PIN_AUTOPLAY 1#define PIN_READWRITE 10#define PIN_CONTRAST 12#define SPRITE_RUN1 1#define SPRITE_RUN2 2#define SPRITE_JUMP 3#define SPRITE_JUMP_UPPER '.' // Use the '.' character for the head#define SPRITE_JUMP_LOWER 4#define SPRITE_TERRAIN_EMPTY ' ' // User the ' ' character#define SPRITE_TERRAIN_SOLID 5#define SPRITE_TERRAIN_SOLID_RIGHT 6#define SPRITE_TERRAIN_SOLID_LEFT 7#define HERO_HORIZONTAL_POSITION 1 // Horizontal position of hero on screen#define TERRAIN_WIDTH 16#define TERRAIN_EMPTY 0#define TERRAIN_LOWER_BLOCK 1#define TERRAIN_UPPER_BLOCK 2#define HERO_POSITION_OFF 0 // Hero is invisible#define HERO_POSITION_RUN_LOWER_1 1 // Hero is running on lower row (pose 1)#define HERO_POSITION_RUN_LOWER_2 2 // (pose 2)#define HERO_POSITION_JUMP_1 3 // Starting a jump#define HERO_POSITION_JUMP_2 4 // Half-way up#define HERO_POSITION_JUMP_3 5 // Jump is on upper row#define HERO_POSITION_JUMP_4 6 // Jump is on upper row#define HERO_POSITION_JUMP_5 7 // Jump is on upper row#define HERO_POSITION_JUMP_6 8 // Jump is on upper row#define HERO_POSITION_JUMP_7 9 // Half-way down#define HERO_POSITION_JUMP_8 10 // About to land#define HERO_POSITION_RUN_UPPER_1 11 // Hero is running on upper row (pose 1)#define HERO_POSITION_RUN_UPPER_2 12 // (pose 2)LiquidCrystal lcd(11, 9, 6, 5, 4, 3);static char terrainUpper[TERRAIN_WIDTH + 1];static char terrainLower[TERRAIN_WIDTH + 1];static bool buttonPushed = false;void initializeGraphics()&#123; static byte graphics[] = &#123; // Run position 1 B01100, B01100, B00000, B01110, B11100, B01100, B11010, B10011, // Run position 2 B01100, B01100, B00000, B01100, B01100, B01100, B01100, B01110, // Jump B01100, B01100, B00000, B11110, B01101, B11111, B10000, B00000, // Jump lower B11110, B01101, B11111, B10000, B00000, B00000, B00000, B00000, // Ground B11111, B11111, B11111, B11111, B11111, B11111, B11111, B11111, // Ground right B00011, B00011, B00011, B00011, B00011, B00011, B00011, B00011, // Ground left B11000, B11000, B11000, B11000, B11000, B11000, B11000, B11000, &#125;; int i; // Skip using character 0, this allows lcd.print() to be used to // quickly draw multiple characters for (i = 0; i &lt; 7; ++i) &#123; lcd.createChar(i + 1, &amp;graphics[i * 8]); &#125; for (i = 0; i &lt; TERRAIN_WIDTH; ++i) &#123; terrainUpper[i] = SPRITE_TERRAIN_EMPTY; terrainLower[i] = SPRITE_TERRAIN_EMPTY; &#125;&#125;// Slide the terrain to the left in half-character increments//void advanceTerrain(char* terrain, byte newTerrain)&#123; for (int i = 0; i &lt; TERRAIN_WIDTH; ++i) &#123; char current = terrain[i]; char next = (i == TERRAIN_WIDTH-1) ? newTerrain : terrain[i+1]; switch (current)&#123; case SPRITE_TERRAIN_EMPTY: terrain[i] = (next == SPRITE_TERRAIN_SOLID) ? SPRITE_TERRAIN_SOLID_RIGHT : SPRITE_TERRAIN_EMPTY; break; case SPRITE_TERRAIN_SOLID: terrain[i] = (next == SPRITE_TERRAIN_EMPTY) ? SPRITE_TERRAIN_SOLID_LEFT : SPRITE_TERRAIN_SOLID; break; case SPRITE_TERRAIN_SOLID_RIGHT: terrain[i] = SPRITE_TERRAIN_SOLID; break; case SPRITE_TERRAIN_SOLID_LEFT: terrain[i] = SPRITE_TERRAIN_EMPTY; break; &#125; &#125;&#125;bool drawHero(byte position, char* terrainUpper, char* terrainLower, unsigned int score) &#123; bool collide = false; char upperSave = terrainUpper[HERO_HORIZONTAL_POSITION]; char lowerSave = terrainLower[HERO_HORIZONTAL_POSITION]; byte upper, lower; switch (position) &#123; case HERO_POSITION_OFF: upper = lower = SPRITE_TERRAIN_EMPTY; break; case HERO_POSITION_RUN_LOWER_1: upper = SPRITE_TERRAIN_EMPTY; lower = SPRITE_RUN1; break; case HERO_POSITION_RUN_LOWER_2: upper = SPRITE_TERRAIN_EMPTY; lower = SPRITE_RUN2; break; case HERO_POSITION_JUMP_1: case HERO_POSITION_JUMP_8: upper = SPRITE_TERRAIN_EMPTY; lower = SPRITE_JUMP; break; case HERO_POSITION_JUMP_2: case HERO_POSITION_JUMP_7: upper = SPRITE_JUMP_UPPER; lower = SPRITE_JUMP_LOWER; break; case HERO_POSITION_JUMP_3: case HERO_POSITION_JUMP_4: case HERO_POSITION_JUMP_5: case HERO_POSITION_JUMP_6: upper = SPRITE_JUMP; lower = SPRITE_TERRAIN_EMPTY; break; case HERO_POSITION_RUN_UPPER_1: upper = SPRITE_RUN1; lower = SPRITE_TERRAIN_EMPTY; break; case HERO_POSITION_RUN_UPPER_2: upper = SPRITE_RUN2; lower = SPRITE_TERRAIN_EMPTY; break; &#125; if (upper != ' ') &#123; terrainUpper[HERO_HORIZONTAL_POSITION] = upper; collide = (upperSave == SPRITE_TERRAIN_EMPTY) ? false : true; &#125; if (lower != ' ') &#123; terrainLower[HERO_HORIZONTAL_POSITION] = lower; collide |= (lowerSave == SPRITE_TERRAIN_EMPTY) ? false : true; &#125; byte digits = (score &gt; 9999) ? 5 : (score &gt; 999) ? 4 : (score &gt; 99) ? 3 : (score &gt; 9) ? 2 : 1; // Draw the scene terrainUpper[TERRAIN_WIDTH] = '\\0'; terrainLower[TERRAIN_WIDTH] = '\\0'; char temp = terrainUpper[16-digits]; terrainUpper[16-digits] = '\\0'; lcd.setCursor(0,0); lcd.print(terrainUpper); terrainUpper[16-digits] = temp; lcd.setCursor(0,1); lcd.print(terrainLower); lcd.setCursor(16 - digits,0); lcd.print(score); terrainUpper[HERO_HORIZONTAL_POSITION] = upperSave; terrainLower[HERO_HORIZONTAL_POSITION] = lowerSave; return collide;&#125;// Handle the button push as an interruptvoid buttonPush() &#123; buttonPushed = true;&#125;void setup()&#123; pinMode(PIN_READWRITE, OUTPUT); digitalWrite(PIN_READWRITE, LOW); pinMode(PIN_CONTRAST, OUTPUT); digitalWrite(PIN_CONTRAST, LOW); pinMode(PIN_BUTTON, INPUT); digitalWrite(PIN_BUTTON, HIGH); pinMode(PIN_AUTOPLAY, OUTPUT); digitalWrite(PIN_AUTOPLAY, HIGH); // Digital pin 2 maps to interrupt 0 attachInterrupt(0/*PIN_BUTTON*/, buttonPush, FALLING); initializeGraphics(); lcd.begin(16, 2);&#125;void loop()&#123; static byte heroPos = HERO_POSITION_RUN_LOWER_1; static byte newTerrainType = TERRAIN_EMPTY; static byte newTerrainDuration = 1; static bool playing = false; static bool blink = false; static unsigned int distance = 0; if (!playing) &#123; drawHero((blink) ? HERO_POSITION_OFF : heroPos, terrainUpper, terrainLower, distance &gt;&gt; 3); if (blink) &#123; lcd.setCursor(0,0); lcd.print(\"Press Start\"); &#125; delay(250); blink = !blink; if (buttonPushed) &#123; initializeGraphics(); heroPos = HERO_POSITION_RUN_LOWER_1; playing = true; buttonPushed = false; distance = 0; &#125; return; &#125; // Shift the terrain to the left advanceTerrain(terrainLower, newTerrainType == TERRAIN_LOWER_BLOCK ? SPRITE_TERRAIN_SOLID : SPRITE_TERRAIN_EMPTY); advanceTerrain(terrainUpper, newTerrainType == TERRAIN_UPPER_BLOCK ? SPRITE_TERRAIN_SOLID : SPRITE_TERRAIN_EMPTY); // Make new terrain to enter on the right if (--newTerrainDuration == 0) &#123; if (newTerrainType == TERRAIN_EMPTY) &#123; newTerrainType = (random(3) == 0) ? TERRAIN_UPPER_BLOCK : TERRAIN_LOWER_BLOCK; newTerrainDuration = 2 + random(10); &#125; else &#123; newTerrainType = TERRAIN_EMPTY; newTerrainDuration = 10 + random(10); &#125; &#125; if (buttonPushed) &#123; if (heroPos &lt;= HERO_POSITION_RUN_LOWER_2) heroPos = HERO_POSITION_JUMP_1; buttonPushed = false; &#125; if (drawHero(heroPos, terrainUpper, terrainLower, distance &gt;&gt; 3)) &#123; playing = false; // The hero collided with something. Too bad. &#125; else &#123; if (heroPos == HERO_POSITION_RUN_LOWER_2 || heroPos == HERO_POSITION_JUMP_8) &#123; heroPos = HERO_POSITION_RUN_LOWER_1; &#125; else if ((heroPos &gt;= HERO_POSITION_JUMP_3 &amp;&amp; heroPos &lt;= HERO_POSITION_JUMP_5) &amp;&amp; terrainLower[HERO_HORIZONTAL_POSITION] != SPRITE_TERRAIN_EMPTY) &#123; heroPos = HERO_POSITION_RUN_UPPER_1; &#125; else if (heroPos &gt;= HERO_POSITION_RUN_UPPER_1 &amp;&amp; terrainLower[HERO_HORIZONTAL_POSITION] == SPRITE_TERRAIN_EMPTY) &#123; heroPos = HERO_POSITION_JUMP_5; &#125; else if (heroPos == HERO_POSITION_RUN_UPPER_2) &#123; heroPos = HERO_POSITION_RUN_UPPER_1; &#125; else &#123; ++heroPos; &#125; ++distance; digitalWrite(PIN_AUTOPLAY, terrainLower[HERO_HORIZONTAL_POSITION + 2] == SPRITE_TERRAIN_EMPTY ? HIGH : LOW); &#125; delay(100);&#125; 接线 LCD1602 Arduino DB7 D3 DB6 D4 DB5 D5 DB4 D6 E D9 R/W D10 RS D11 V0 D12 原网址：这儿 （可能需要开VPN）","categories":[{"name":"科技","slug":"科技","permalink":"https://linyuxuanlin.github.io/categories/科技/"}],"tags":[{"name":"Arduino","slug":"Arduino","permalink":"https://linyuxuanlin.github.io/tags/Arduino/"},{"name":"C++","slug":"C","permalink":"https://linyuxuanlin.github.io/tags/C/"},{"name":"教程","slug":"教程","permalink":"https://linyuxuanlin.github.io/tags/教程/"},{"name":"作品","slug":"作品","permalink":"https://linyuxuanlin.github.io/tags/作品/"}]},{"title":"Arduino教程汇总","slug":"Arduino传感器教程汇总","date":"2016-10-02T14:48:49.000Z","updated":"2017-06-30T14:10:01.000Z","comments":true,"path":"2016/10/02/Arduino传感器教程汇总/","link":"","permalink":"https://linyuxuanlin.github.io/2016/10/02/Arduino传感器教程汇总/","excerpt":"缓更","text":"缓更 什么是Arduino?可以把Arduino主控板看做一个微缩版电脑，编写程序，交给Arduino帮你执行。若你想造一只机器人，Arudino作为控制中枢，从各传感器接收数据，处理并交给其它传感器执行，这样，机器人就能动了。 Arduino的优势Arduino在全世界创客圈的影响范围很大，有数不胜数的开源社区、论坛。对比51单片机，Arduino极易入门，而且能适应快速开发。对于我们学生，随时能造出一些黑科技，服务于我们的生活。 各类传感器的参考输入类按钮 1. 简介:输入设备，按下时输出低电平，反之 2. 接线:3. 程序: 12345678910111213141516171819202122232425//name: Button example//Description: 按扭的例程//IDE version: 1.6//Author: Lin &lt;linyuxuanlin.github.io&gt;//Date: 2016-10-3//note: 按下按钮，LED亮；松开，LED灭int Button = 2;int LEDpin = 13;void setup() &#123; pinMode(Button, INPUT_PULLUP); //上拉使之默认接高电平,省去电阻 pinMode(LEDpin, OUTPUT); //设置13号IO口为输出状态&#125;void loop() &#123; int ButtonState = digitalRead(Button); //设置变量存储状态值 if(ButtonState==0) &#123; digitalWrite(LEDpin,HIGH); //如果读到的状态为0，说明按键已经按下，点亮LED &#125; else &#123; digitalWrite(LEDpin,LOW); // 反之，熄灭LED &#125; &#125; 超声波传感器 1. 简介:检测距离2. 接线: 3. 程序:为了最大程度简化程序，这里我们可以用到这个库文件SR04库123456789101112131415161718192021222324/*name: HC-SR04 exampleDescription: 超声波测距,输出至串口IDE version: 1.6Author: Lin &lt;linyuxuanlin.github.io&gt;Date: 2016-10-5note: TRIG - 2 ECHO - 3*/#include \"SR04.h\"SR04 sr04 = SR04(3,2);void setup() &#123; Serial.begin(9600); //串口启动 Serial.println(\"Hi there!\"); delay(1000);&#125;void loop() &#123; int a=sr04.Distance(); //把读到的数据赋值给a Serial.print(a); //输出 Serial.println(\"cm\"); delay(500);&#125; 旋转编码器 1. 简介: 旋转，输出不同数值 2. 接线:3. 程序:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051//name: RotaryEncoder example//Description: 旋转编码器例程//IDE version: 1.6//Author: Lin &lt;linyuxuanlin.github.io&gt;//Date: 2016-10-2//note: 顺时针旋转数值变大；逆时针变小；按钮按下时显示#define ENCODER_A_PIN 2#define ENCODER_B_PIN 3#define SWITCH_PIN 4long position;void setup()&#123; //初始化 pinMode(ENCODER_A_PIN, INPUT); pinMode(ENCODER_B_PIN, INPUT); pinMode(SWITCH_PIN, INPUT); //硬件中断 attachInterrupt(0, read_quadrature, CHANGE); //初始化串口 Serial.begin(9600);&#125;void loop()&#123; if (digitalRead(SWITCH_PIN) == LOW)&#123; delay(10); if (digitalRead(SWITCH_PIN) == LOW)&#123; Serial.println(\"Switch Pressed\"); &#125; &#125; Serial.print(\"Position: \"); Serial.println(position, DEC); delay(500);&#125;void read_quadrature()&#123; // ENA脚下降沿中断触发 if (digitalRead(ENCODER_A_PIN) == LOW)&#123; //查询ENB的电平以确认是顺时针还是逆时针旋转 if (digitalRead(ENCODER_B_PIN) == LOW) position++; &#125; // ENA脚上升沿中断触发 else&#123; //查询ENB的电平以确认是顺时针还是逆时针旋转 if (digitalRead(ENCODER_B_PIN) == LOW) position--; &#125;&#125; 未完，有时间继续填坑","categories":[{"name":"科技","slug":"科技","permalink":"https://linyuxuanlin.github.io/categories/科技/"}],"tags":[{"name":"Arduino","slug":"Arduino","permalink":"https://linyuxuanlin.github.io/tags/Arduino/"},{"name":"C++","slug":"C","permalink":"https://linyuxuanlin.github.io/tags/C/"},{"name":"教程","slug":"教程","permalink":"https://linyuxuanlin.github.io/tags/教程/"}]},{"title":"没有成本的世界不一定美好","slug":"没有成本的世界不一定美好","date":"2016-10-01T05:35:59.000Z","updated":"2017-06-30T14:09:48.000Z","comments":true,"path":"2016/10/01/没有成本的世界不一定美好/","link":"","permalink":"https://linyuxuanlin.github.io/2016/10/01/没有成本的世界不一定美好/","excerpt":"我们习惯的观念是尽可能地降低成成本，或许根本没有想过没有成本的世界会怎样。","text":"我们习惯的观念是尽可能地降低成成本，或许根本没有想过没有成本的世界会怎样。 交高额的学费，然后才能取得学习的机会，那么你一定珍惜机会，努力学习。因为已经交了学费，你学习的成本就只有因为读书而放弃的打工收入了。反过来，如果你不好好学习，要重头再学的话，那么你的成本还要加上那高额的学费。如果需要走很远的路、排很长的队，然后才能够参观博物馆，看画展，那么你一定看得仔细。反过来，如果很方便就可以去参观博物馆、看画展，那么你一定看得不那么仔细。 没有成本，人们做事就不会认真，对什么都不会珍惜。作为个人，我们都希望能够长生不老，但如果人人都长生不老的话，那么我们完全可以胡来，因为大不了从头再来。死亡是一个残酷的现实，但死亡也是一种纪律。没有死亡，这世界就会是一个无序的世界，会乱套的，也就没有人能够真正地活。 Lin的观点： 成本就像一道门槛，筛选掉没有志气、能力的人，也让已经跨过门槛的人更加珍惜。对此，我想引用王安石的话来补充一下： 古人之观于天地、山川、草木、虫鱼、鸟兽，往往有得，以其求思之深而无不在也。夫夷以近，则游者众；险以远，则至者少。而世之奇伟、瑰怪，非常之观，常在于险远，而人之所罕至焉，故非有志者不能至也。有志矣，不随以止也，然力不足者，亦不能至也。有志与力，而又不随以怠，至于幽暗昏惑而无物以相之，亦不能至也。然力足以至焉，于人为可讥，而在己为有悔；尽吾志也而不能至者，可以无悔矣，其孰能讥之乎？ 观点：谢作诗，王安石","categories":[{"name":"观点","slug":"观点","permalink":"https://linyuxuanlin.github.io/categories/观点/"}],"tags":[{"name":"观点","slug":"观点","permalink":"https://linyuxuanlin.github.io/tags/观点/"}]},{"title":"MeArm —— 3D打印机械臂","slug":"MeArm","date":"2016-09-25T06:17:15.000Z","updated":"2017-06-30T14:26:13.000Z","comments":true,"path":"2016/09/25/MeArm/","link":"","permalink":"https://linyuxuanlin.github.io/2016/09/25/MeArm/","excerpt":"","text":"先放个预告，有空整理 = =","categories":[{"name":"科技","slug":"科技","permalink":"https://linyuxuanlin.github.io/categories/科技/"}],"tags":[{"name":"Arduino","slug":"Arduino","permalink":"https://linyuxuanlin.github.io/tags/Arduino/"},{"name":"C++","slug":"C","permalink":"https://linyuxuanlin.github.io/tags/C/"},{"name":"教程","slug":"教程","permalink":"https://linyuxuanlin.github.io/tags/教程/"},{"name":"3D打印","slug":"3D打印","permalink":"https://linyuxuanlin.github.io/tags/3D打印/"},{"name":"作品","slug":"作品","permalink":"https://linyuxuanlin.github.io/tags/作品/"}]},{"title":"如何玩坏一个舵机","slug":"如何玩坏一个舵机","date":"2016-09-15T01:47:42.000Z","updated":"2017-06-30T14:10:05.000Z","comments":true,"path":"2016/09/15/如何玩坏一个舵机/","link":"","permalink":"https://linyuxuanlin.github.io/2016/09/15/如何玩坏一个舵机/","excerpt":"如图,这是一个9g舵机。如果拿来造小车的话，简直再好不过了： 体积小 自带驱动 但是，一个非常严重的问题这只是一个90°舵机，总不能让小车在一步之间走来走去吧 所以，今天来介绍一下把90°舵机改成360°舵机的方法","text":"如图,这是一个9g舵机。如果拿来造小车的话，简直再好不过了： 体积小 自带驱动 但是，一个非常严重的问题这只是一个90°舵机，总不能让小车在一步之间走来走去吧 所以，今天来介绍一下把90°舵机改成360°舵机的方法 准备 螺丝刀 热熔胶枪 剪钳 第一步，拆开舵机 注意：一定要记住每个齿轮的位置！ 第二步，修改齿轮把最大的那个齿轮拣出来，用剪钳把后面凸起的地方剪掉找一只比轴的直径大一点的螺丝刀，给这个齿轮扩大一下内径，使之能在轴上自由转动 第三步，封死电位器在做这一步之前，我们必须先把舵机回到中位 找一块Arduino，打开IDE，给它来一段程序 12345678910//by Lin#include &lt;Servo.h&gt;Servo myservo;void setup() &#123; myservo.attach(9);//舵机连接Arduino的D9&#125;void loop() &#123; myservo.write(90); //让舵机回到中位&#125; 按图接上舵机，你会发现它一直在转。 把右边的轴来回转几圈，找到一个让电机停下来的位置（把这里的电位器调到中间的值 给电位器上胶，封死它。注意，这时候不要不小心把轴给转动了，如果这样，重新返回第三步。 第四步，组装把齿轮组装回去，注意不要弄错齿轮位置。把螺丝锁上，这样你就得到了一个360°连转舵机了。 第五步，调试换个程序 1234567891011121314151617#include &lt;Servo.h&gt;Servo myservo; int pos = 0;void setup() &#123; myservo.attach(9); &#125;void loop() &#123; for (pos = 0; pos &lt;= 180; pos += 1) &#123; // in steps of 1 degree myservo.write(pos); delay(15); &#125; for (pos = 180; pos &gt;= 0; pos -= 1) &#123; myservo.write(pos); delay(15); &#125;&#125; 效果：舵机加速—减速—反方向加速—减速…… 拓展其实，舵机的创意还挺多的比如，代替减速电机做个Arduino小车；给智能手环刷一下步数；还有这个：逆天的舵机创意","categories":[{"name":"科技","slug":"科技","permalink":"https://linyuxuanlin.github.io/categories/科技/"}],"tags":[{"name":"Arduino","slug":"Arduino","permalink":"https://linyuxuanlin.github.io/tags/Arduino/"},{"name":"C++","slug":"C","permalink":"https://linyuxuanlin.github.io/tags/C/"},{"name":"教程","slug":"教程","permalink":"https://linyuxuanlin.github.io/tags/教程/"},{"name":"改装","slug":"改装","permalink":"https://linyuxuanlin.github.io/tags/改装/"}]},{"title":"『三体』中的经典语录","slug":"『三体』中的经典语录","date":"2016-09-14T02:59:04.000Z","updated":"2017-06-30T14:09:47.000Z","comments":true,"path":"2016/09/14/『三体』中的经典语录/","link":"","permalink":"https://linyuxuanlin.github.io/2016/09/14/『三体』中的经典语录/","excerpt":"摘录了几条感触较深的: 给岁月以文明，而不是给文明以岁月 你的无畏来源于无知 大自然真的是自然的吗？","text":"摘录了几条感触较深的: 给岁月以文明，而不是给文明以岁月 你的无畏来源于无知 大自然真的是自然的吗？ 弱小和无知，都不是生存的障碍，傲慢才是 在技术面前，艺术、文学都可以被直接忽略 碑是那么小，与其说是为了纪念，更像是为了忘却 毁灭你，又与你有何相干？ 前进！前进！不择手段的前进！ 唯一不可阻挡的是时间，它像一把利刃，无声地切开了坚硬和柔软的一切，恒定的向前推进着，没有任何东西能够使它的行径产生丝毫颠簸，它却改变着一切。 这就完了？有料黑暗森林法则改编的公司生存法则· 生存是创业公司的第一需要。 · 公司需要不断扩张，但市场总量有限。 · 小公司随时可能发生技术爆炸，一下子远远走在大公司前面，灭掉大公司。 · 弱小和无知不是生存的障碍，傲慢才是。（某大公司老板经常说，公司离倒闭只有半年） · 毁灭你，与你何干。为了实现公司战略，哪管其他公司死活。 · 赶尽杀绝是对竞争对手最大的重视。 · 藏好自己（创意随时会被山寨的小公司）。做好清理（处于领先的大公司通过收购等手段消灭潜在对手）。 · 生存本就是一种幸运，但不知什么时候起，某些公司觉得生存成了唾手可得的东西，这是他们失败的根本原因。 · 降维攻击，不惜把市场环境做得更恶劣，自己宁可活得惨点，也要让竞争对手先死（比如电商几乎都在亏本），不能在低维生存的小公司就只能灭亡。 · 宇宙很大，生活更大，也许以后还有缘相见。","categories":[{"name":"文学","slug":"文学","permalink":"https://linyuxuanlin.github.io/categories/文学/"}],"tags":[{"name":"书摘","slug":"书摘","permalink":"https://linyuxuanlin.github.io/tags/书摘/"}]},{"title":"灵感并不那么值钱","slug":"灵感并不那么值钱","date":"2016-09-14T02:54:04.000Z","updated":"2017-06-30T14:09:48.000Z","comments":true,"path":"2016/09/14/灵感并不那么值钱/","link":"","permalink":"https://linyuxuanlin.github.io/2016/09/14/灵感并不那么值钱/","excerpt":"人们对“创造性思维”的认识有三个迷信： 创新的关键是某个绝妙的灵感 灵感非常难得 想法越离奇越有价值 但真正的创造性思维不是这样的。","text":"人们对“创造性思维”的认识有三个迷信： 创新的关键是某个绝妙的灵感 灵感非常难得 想法越离奇越有价值 但真正的创造性思维不是这样的。 伟大的发现都是“慢慢地”得出来的 当牛顿看到苹果落地发现万有引力之前，就有多少人有过万有引力的设想，我们有充分理由推测牛顿的引力思想是“学”来的——借鉴前人的想法，使用了前人的数据，然后做出了无数计算验证。 在门捷列夫提出元素周期表之前，给元素分类已是显学，英国化学家纽兰兹已经发现用原子量大小进行排序具有明显的周期性，并把这种周期性称为“八音律”，这已经非常接近门捷列夫的周期表了。 伟大的发现并不是一蹴而就的，而是一系列小想法慢慢连接起来的结果。研究一个问题开始有个模糊的直觉，选择一个方向往下走，随着研究深入，新想法连接起来，得到新事实支持，慢慢长大。就像阿基米德的“尤里卡时刻”，伟大的突破是慢慢直觉积累到一定程度导致的。 别指望灵感，指望汗水灵感并不想人们想象的那样值钱。不管是科学家，艺术家还是企业家，都会产生各种想法，也许一百个里面只有一个最后证明是有用的。只要你愿意把想法一个个拿来尝试，失败就是你的日常生活，成功则是失败的副产品。 真正的创造力要求正确，有用真正的职业选手所做的大部分日常的创新，都是在当前基础上的改进。 有价值的“创造性思维”必须是“生之有根，长之靠谱”。所以，鼓励“创造性思维”应当鼓励尝试，鼓励失败，而不是鼓励妄想。 观点：by万维钢","categories":[{"name":"观点","slug":"观点","permalink":"https://linyuxuanlin.github.io/categories/观点/"}],"tags":[{"name":"观点","slug":"观点","permalink":"https://linyuxuanlin.github.io/tags/观点/"}]},{"title":"淘汰人的从来都是工具，不是年龄","slug":"淘汰人的从来都是工具，不是年龄","date":"2016-09-14T02:54:04.000Z","updated":"2017-06-30T14:10:04.000Z","comments":true,"path":"2016/09/14/淘汰人的从来都是工具，不是年龄/","link":"","permalink":"https://linyuxuanlin.github.io/2016/09/14/淘汰人的从来都是工具，不是年龄/","excerpt":"汽车淘汰马车，不是因为马匹不够强壮，而是因为工具的革命性迭代。一代人是怎么淘汰上一代人的？并不是因为更勤奋，更聪明，而是更乐于接受新的工具。","text":"汽车淘汰马车，不是因为马匹不够强壮，而是因为工具的革命性迭代。一代人是怎么淘汰上一代人的？并不是因为更勤奋，更聪明，而是更乐于接受新的工具。 在新的工具面前，一切价值被重构，包括时间的意义和对能力的定义. 每一次工具革命发生的时候，原有生态链中既得利益者往往无法适应，他们的思维和运作体系已在原有的工具系统中形成惯性，在犹豫和恐惧中，新的竞争者已经刀逼颈部。 Lin的观点： 不禁想起《三体》中的”技术爆炸” “人类从狩猎时代到农业时代，用了十几万个地球年时间；从农业时代到工业时代用了几千地球年；而由工业时代到原子时代，只用了二百地球年；之后，仅用了几十个地球年，人类就进入了信息时代。” 在现代社会，人类的科技呈指数型发展。这个时代的工具衰老速度一定快于人的年龄的衰老。所以，我们要增强自己的适应能力，用积极的心态去接受不断更新的工具 观点：by吴晓波 改编：我","categories":[{"name":"观点","slug":"观点","permalink":"https://linyuxuanlin.github.io/categories/观点/"}],"tags":[{"name":"观点","slug":"观点","permalink":"https://linyuxuanlin.github.io/tags/观点/"}]},{"title":"如何应对干扰","slug":"如何应对干扰","date":"2016-09-14T02:53:04.000Z","updated":"2017-06-30T14:10:04.000Z","comments":true,"path":"2016/09/14/如何应对干扰/","link":"","permalink":"https://linyuxuanlin.github.io/2016/09/14/如何应对干扰/","excerpt":"当我在学习时，有时难免会遇到音乐等噪音的干扰。很多时候我无法改变环境，只能用意志力去抵抗，不断地提醒自己：“我要专心学习！不要理那些声音！我要战胜这些噪音!”但是这些斗争都是徒劳的，噪音根本无法从我的脑海中排除，而且这些斗争让我感觉非常烦躁，更难专心学习。 当我们无法改变环境时，当我们不得不面对外界的持续干扰时，我们没必要用意志力去对抗它，去排斥它，而应该做出一副接受他，欢迎它的姿势，这种乐观的姿态能减弱我们对它的排斥，从而减轻它对我们的干扰。","text":"当我在学习时，有时难免会遇到音乐等噪音的干扰。很多时候我无法改变环境，只能用意志力去抵抗，不断地提醒自己：“我要专心学习！不要理那些声音！我要战胜这些噪音!”但是这些斗争都是徒劳的，噪音根本无法从我的脑海中排除，而且这些斗争让我感觉非常烦躁，更难专心学习。 当我们无法改变环境时，当我们不得不面对外界的持续干扰时，我们没必要用意志力去对抗它，去排斥它，而应该做出一副接受他，欢迎它的姿势，这种乐观的姿态能减弱我们对它的排斥，从而减轻它对我们的干扰。 就像初学骑单车的时候，因为担心会摔伤，满脑子想着“一定要稳，千万不能失去平衡”，往右拼命扭车把，发现不对又很着急地往左扭，如此般扭来扭曲，不摔倒才怪。 面对干扰，先调整一下心态，尝试去接受它，甚至可以用欢迎的策略，告诉自己：“Come on!跪求你来得再猛烈一点吧，还不够！”一边在心中大喊，一边情不自禁地做出兴奋的表情和手势。这些奇葩的念头能把自己逗乐，让自己处于一种乐观的状态，也就不会那么反感，大脑很快就能忽视它。 观点：by吴业涛","categories":[{"name":"观点","slug":"观点","permalink":"https://linyuxuanlin.github.io/categories/观点/"}],"tags":[{"name":"观点","slug":"观点","permalink":"https://linyuxuanlin.github.io/tags/观点/"}]},{"title":"整蛊小玩意","slug":"整蛊小玩意","date":"2016-09-13T03:09:41.000Z","updated":"2017-06-30T14:26:13.000Z","comments":true,"path":"2016/09/13/整蛊小玩意/","link":"","permalink":"https://linyuxuanlin.github.io/2016/09/13/整蛊小玩意/","excerpt":"如题，这是一个一靠近就会发出奇怪的声音，而又很难被发现的小装置 成品图？没有。有空我会把它做出来 材料 人体红外热释电传感器（PIR） 蜂鸣器 (无源) Arduino","text":"如题，这是一个一靠近就会发出奇怪的声音，而又很难被发现的小装置 成品图？没有。有空我会把它做出来 材料 人体红外热释电传感器（PIR） 蜂鸣器 (无源) Arduino 接线 Arduino sensors D2 PIR D3 Piezo 程序全都放在这 总结完？ 完。","categories":[{"name":"科技","slug":"科技","permalink":"https://linyuxuanlin.github.io/categories/科技/"}],"tags":[{"name":"Arduino","slug":"Arduino","permalink":"https://linyuxuanlin.github.io/tags/Arduino/"},{"name":"C++","slug":"C","permalink":"https://linyuxuanlin.github.io/tags/C/"},{"name":"教程","slug":"教程","permalink":"https://linyuxuanlin.github.io/tags/教程/"},{"name":"作品","slug":"作品","permalink":"https://linyuxuanlin.github.io/tags/作品/"}]},{"title":"便携式测距仪","slug":"便携式测距仪","date":"2016-09-11T03:09:41.000Z","updated":"2017-06-30T14:26:39.000Z","comments":true,"path":"2016/09/11/便携式测距仪/","link":"","permalink":"https://linyuxuanlin.github.io/2016/09/11/便携式测距仪/","excerpt":"想要一块能固定在手腕上的测距的工具吗？ 来玩玩这个项目吧","text":"想要一块能固定在手腕上的测距的工具吗？ 来玩玩这个项目吧 首先，你需要： HC-SR04超声波测距模块 OLED显示屏 （这里用的是ISP类型的） Arduino nano 锂电池 按钮/开关 接线： Arduino OLED HC-SR04 D13 SCK/D0 D11 MOSI/D1 D10 CS/DC D9 RST D8 Echo D7 Trig 程序1234567891011121314151617181920212223242526272829303132#include&lt;U8glib.h&gt;U8GLIB_SSD1306_128X64 u8g(10, 9, 12, 11, 13);const int TrigPin = 7;const int EchoPin = 8;unsigned int distance;void setup() &#123; pinMode(TrigPin, OUTPUT); pinMode(EchoPin, INPUT); u8g.setColorIndex(1); &#125;void loop() &#123; digitalWrite(TrigPin, LOW); delayMicroseconds(2); digitalWrite(TrigPin, HIGH); delayMicroseconds(10); digitalWrite(TrigPin, LOW); distance = pulseIn(EchoPin, HIGH) / 58.00; u8g.firstPage(); do &#123; draw(); &#125; while ( u8g.nextPage() ); delay(100);&#125;void draw(void) &#123; u8g.setFont(u8g_font_ncenB24); u8g.drawStr( 80, 50, \"cm\"); u8g.setPrintPos(5, 50); u8g.print(distance);&#125; 总结这是个以前做过的项目，距今历史悠久，所以教程不是那么完整。请自己发挥想象，让它变得更可爱。有问题请在文章下面留言:D","categories":[{"name":"科技","slug":"科技","permalink":"https://linyuxuanlin.github.io/categories/科技/"}],"tags":[{"name":"Arduino","slug":"Arduino","permalink":"https://linyuxuanlin.github.io/tags/Arduino/"},{"name":"C++","slug":"C","permalink":"https://linyuxuanlin.github.io/tags/C/"},{"name":"教程","slug":"教程","permalink":"https://linyuxuanlin.github.io/tags/教程/"},{"name":"作品","slug":"作品","permalink":"https://linyuxuanlin.github.io/tags/作品/"}]},{"title":"Markdown学习笔记","slug":"Markdown学习笔记","date":"2016-09-11T03:08:41.000Z","updated":"2017-06-30T14:10:00.000Z","comments":true,"path":"2016/09/11/Markdown学习笔记/","link":"","permalink":"https://linyuxuanlin.github.io/2016/09/11/Markdown学习笔记/","excerpt":"","text":"另附 中文参考","categories":[{"name":"技巧","slug":"技巧","permalink":"https://linyuxuanlin.github.io/categories/技巧/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://linyuxuanlin.github.io/tags/Markdown/"},{"name":"技巧","slug":"技巧","permalink":"https://linyuxuanlin.github.io/tags/技巧/"}]},{"title":"造个方舟反应炉","slug":"造个方舟反应炉","date":"2016-09-11T01:47:42.000Z","updated":"2017-06-30T14:26:13.000Z","comments":true,"path":"2016/09/11/造个方舟反应炉/","link":"","permalink":"https://linyuxuanlin.github.io/2016/09/11/造个方舟反应炉/","excerpt":"造一副自己的铁衣 这是一个非常长远的目标 作为钢铁侠的脑残粉 我决定先给自己造个方舟反应炉","text":"造一副自己的铁衣 这是一个非常长远的目标 作为钢铁侠的脑残粉 我决定先给自己造个方舟反应炉 首先，它长这样： 实现的功能： 阻止金属碎片进入心脏 （不可能） 提供强大的核反应能量 （想得美） 装装逼 （这个倒可以） 说了这么多，我们来看看它是怎样被造出来的吧 1.材料清单 一个环形LED模块 一块arduino板子 小小的锂电池 一个小开关（总不能一直亮着吧） 泡沫板 （用于把LED光线分散均匀） 硬纸板（做个后盖） 橡皮筋（方便挂在胸前） 2.把程序下载进arduino程序：源代码 实现的效果： 蓝色呼吸灯 开机有彩虹灯的特效 3.把主体打印出来模型文件放在这 4.组装1. 接线： LED模块 Arduino Din D6 VCC 5V GND GND 2. 到碗里来： 首先，把泡沫板切一个圆，直接压进去把Arduino和LED粘在上面电池可放里面，只是感觉空间太窄我直接把它外接出来 如果还剩空间可以把打印件剪薄几层，太厚了不好看 3. 封印：厚纸板上裁个圆，作为后盖 用502粘上为了紧固橡皮筋，我另外粘了些胶带 史上最丑的设计 #完成！ 另附：佩戴效果图 写在最后： 此方舟反应炉功能也许还不完善，我会慢慢加入 如果你有任何问题，或是有更好的建议，欢迎随时和我交流。","categories":[{"name":"科技","slug":"科技","permalink":"https://linyuxuanlin.github.io/categories/科技/"}],"tags":[{"name":"Arduino","slug":"Arduino","permalink":"https://linyuxuanlin.github.io/tags/Arduino/"},{"name":"C++","slug":"C","permalink":"https://linyuxuanlin.github.io/tags/C/"},{"name":"教程","slug":"教程","permalink":"https://linyuxuanlin.github.io/tags/教程/"},{"name":"3D打印","slug":"3D打印","permalink":"https://linyuxuanlin.github.io/tags/3D打印/"},{"name":"作品","slug":"作品","permalink":"https://linyuxuanlin.github.io/tags/作品/"}]},{"title":"你好，世界","slug":"你好，世界","date":"2016-09-10T14:18:32.000Z","updated":"2017-06-30T14:26:39.000Z","comments":true,"path":"2016/09/10/你好，世界/","link":"","permalink":"https://linyuxuanlin.github.io/2016/09/10/你好，世界/","excerpt":"我把第一篇文章命名为”Hello world”,这个代表着所有编程语言的开始的词语，也标志着这个全新的个人站点将会是一个与代码有关的园地。 历经千辛万苦，前前后后断断续续地造了两个多月，终于在Github pages上把网站建起来了。","text":"我把第一篇文章命名为”Hello world”,这个代表着所有编程语言的开始的词语，也标志着这个全新的个人站点将会是一个与代码有关的园地。 历经千辛万苦，前前后后断断续续地造了两个多月，终于在Github pages上把网站建起来了。 目标：做一个会输出的人 “输出”比“输入”要累得多，把自己的思想和每天所收获的传递出去，多了一个反刍，咀嚼和表达的过程。相比“输入”，“输出”能使我感受到善用时间和努力的快乐。这就够了，不是吗 关于github pages 相比之前wordpress的富文本编辑器，pages为我提供了简洁的Markdown语法 蹭上hexo有好多好多的主题可以用 还是之前那句话，我喜欢青菜，对海鲜持有绝对不吃的观点。我是处女座，现在用的这个主题我很满意。 在这纷纷扰扰的世界里，与其临渊羡鱼，不如退而结网。每个人都有一张属于自己的网，织好这一张就够了。 完","categories":[{"name":"观点","slug":"观点","permalink":"https://linyuxuanlin.github.io/categories/观点/"}],"tags":[{"name":"文艺复兴","slug":"文艺复兴","permalink":"https://linyuxuanlin.github.io/tags/文艺复兴/"}]}]}